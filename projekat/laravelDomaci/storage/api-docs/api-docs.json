{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Management API",
        "description": "API documentation for Event Management System with Laravel and React",
        "contact": {
            "email": "admin@eventmanagement.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/admin/dashboard/overview": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get admin dashboard overview statistics",
                "description": "Retrieve comprehensive overview statistics including events, tickets, revenue, and percentage changes compared to last month",
                "operationId": "getOverviewStats",
                "responses": {
                    "200": {
                        "description": "Overview statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Overview statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_events": {
                                                    "description": "Total number of events",
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "active_events": {
                                                    "description": "Number of active events",
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "total_tickets_sold": {
                                                    "description": "Total tickets sold (active + used)",
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "total_revenue": {
                                                    "description": "Total revenue from sold tickets",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 125000.5
                                                },
                                                "total_users": {
                                                    "description": "Total number of users",
                                                    "type": "integer",
                                                    "example": 890
                                                },
                                                "pending_validations": {
                                                    "description": "Active tickets for ongoing events",
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "cancelled_tickets": {
                                                    "description": "Number of cancelled tickets",
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "refund_amount": {
                                                    "description": "Total refund amount",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5600
                                                },
                                                "revenue_change": {
                                                    "description": "Revenue percentage change from last month",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15.5
                                                },
                                                "tickets_change": {
                                                    "description": "Tickets sold percentage change from last month",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8.2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving overview statistics"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/revenue-chart": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get revenue chart data",
                "description": "Retrieve daily revenue and ticket sales data for chart visualization over specified period",
                "operationId": "getRevenueChart",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Number of days to retrieve data for",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revenue chart data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Revenue chart data retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "description": "Date in Y-m-d format",
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-15"
                                                    },
                                                    "formatted_date": {
                                                        "description": "Date in d.m format for display",
                                                        "type": "string",
                                                        "example": "15.01"
                                                    },
                                                    "revenue": {
                                                        "description": "Revenue for the day",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 2500.5
                                                    },
                                                    "tickets_sold": {
                                                        "description": "Number of tickets sold on the day",
                                                        "type": "integer",
                                                        "example": 25
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving revenue chart data"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/category-stats": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get category statistics",
                "description": "Retrieve comprehensive statistics for all event categories including events count, tickets sold, revenue and average ticket price",
                "operationId": "getCategoryStats",
                "responses": {
                    "200": {
                        "description": "Category statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Category ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Category name",
                                                        "type": "string",
                                                        "example": "Koncerti"
                                                    },
                                                    "color": {
                                                        "description": "Category color hex code",
                                                        "type": "string",
                                                        "example": "#FF5733"
                                                    },
                                                    "events_count": {
                                                        "description": "Number of events in category",
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "tickets_sold": {
                                                        "description": "Total tickets sold for category",
                                                        "type": "integer",
                                                        "example": 450
                                                    },
                                                    "revenue": {
                                                        "description": "Total revenue for category",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "avg_ticket_price": {
                                                        "description": "Average ticket price for category",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving category statistics"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/top-events": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get top performing events",
                "description": "Retrieve top performing events sorted by revenue, tickets sold, or attendance rate",
                "operationId": "getTopEvents",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of events to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "example": 10
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort criteria",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "revenue",
                            "enum": [
                                "revenue",
                                "tickets_sold",
                                "attendance_rate"
                            ],
                            "example": "revenue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top events retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Event ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Event name",
                                                        "type": "string",
                                                        "example": "Rock koncert"
                                                    },
                                                    "category": {
                                                        "description": "Category name",
                                                        "type": "string",
                                                        "example": "Koncerti"
                                                    },
                                                    "category_color": {
                                                        "description": "Category color",
                                                        "type": "string",
                                                        "example": "#FF5733"
                                                    },
                                                    "start_date": {
                                                        "description": "Event start date",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-02-15 20:00:00"
                                                    },
                                                    "location": {
                                                        "description": "Event location",
                                                        "type": "string",
                                                        "example": "Arena Zagreb"
                                                    },
                                                    "total_tickets": {
                                                        "description": "Total available tickets",
                                                        "type": "integer",
                                                        "example": 500
                                                    },
                                                    "tickets_sold": {
                                                        "description": "Number of tickets sold",
                                                        "type": "integer",
                                                        "example": 450
                                                    },
                                                    "revenue": {
                                                        "description": "Total revenue",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 45000
                                                    },
                                                    "attendance_rate": {
                                                        "description": "Attendance rate percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 90
                                                    },
                                                    "status": {
                                                        "description": "Event status",
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "completed"
                                                        ],
                                                        "example": "active"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving top events"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/recent-activity": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get recent activity feed",
                "description": "Retrieve recent ticket purchases and cancellations for activity monitoring",
                "operationId": "getRecentActivity",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of activities to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent activity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recent activity retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "description": "Activity type",
                                                        "type": "string",
                                                        "enum": [
                                                            "purchase",
                                                            "cancellation"
                                                        ],
                                                        "example": "purchase"
                                                    },
                                                    "id": {
                                                        "description": "Ticket ID",
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "description": {
                                                        "description": "Activity description",
                                                        "type": "string",
                                                        "example": "Marko Petrović kupio kartu za Rock koncert"
                                                    },
                                                    "amount": {
                                                        "description": "Transaction amount",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 100
                                                    },
                                                    "timestamp": {
                                                        "description": "Activity timestamp",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-01-15 14:30:00"
                                                    },
                                                    "user": {
                                                        "description": "User name",
                                                        "type": "string",
                                                        "example": "Marko Petrović"
                                                    },
                                                    "event": {
                                                        "description": "Event name",
                                                        "type": "string",
                                                        "example": "Rock koncert"
                                                    },
                                                    "ticket_number": {
                                                        "description": "Ticket number",
                                                        "type": "string",
                                                        "example": "TKT-2024-001"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving recent activity"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/upcoming-events": {
            "get": {
                "tags": ["Admin Dashboard"],
                "summary": "Get upcoming events with urgency indicators",
                "description": "Retrieve upcoming events within next 30 days with sales statistics and urgency indicators for admin monitoring",
                "operationId": "getUpcomingEvents",
                "responses": {
                    "200": {
                        "description": "Upcoming events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Upcoming events retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Event ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Event name",
                                                        "type": "string",
                                                        "example": "Jazz večer"
                                                    },
                                                    "start_date": {
                                                        "description": "Event start date",
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-02-20 19:00:00"
                                                    },
                                                    "location": {
                                                        "description": "Event location",
                                                        "type": "string",
                                                        "example": "Lisinski"
                                                    },
                                                    "category": {
                                                        "description": "Category name",
                                                        "type": "string",
                                                        "example": "Koncerti"
                                                    },
                                                    "category_color": {
                                                        "description": "Category color",
                                                        "type": "string",
                                                        "example": "#FF5733"
                                                    },
                                                    "total_tickets": {
                                                        "description": "Total available tickets",
                                                        "type": "integer",
                                                        "example": 300
                                                    },
                                                    "tickets_sold": {
                                                        "description": "Number of tickets sold",
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "available_tickets": {
                                                        "description": "Number of available tickets",
                                                        "type": "integer",
                                                        "example": 180
                                                    },
                                                    "sales_rate": {
                                                        "description": "Sales rate percentage",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 40
                                                    },
                                                    "days_until": {
                                                        "description": "Days until event",
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "urgency": {
                                                        "description": "Urgency level based on sales and time",
                                                        "type": "string",
                                                        "enum": [
                                                            "low",
                                                            "normal",
                                                            "medium",
                                                            "high"
                                                        ],
                                                        "example": "normal"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving upcoming events"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Register a new user",
                "description": "Create a new user account with email and password",
                "operationId": "register",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "is_admin": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Login user",
                "description": "Authenticate user with email and password",
                "operationId": "login",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "is_admin": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Logout user",
                "description": "Revoke the current access token and logout the user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": ["Authentication"],
                "summary": "Get authenticated user",
                "description": "Retrieve the currently authenticated user's information",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Refresh access token",
                "description": "Revoke current token and generate a new access token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "is_admin": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T00:00:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "2|newabcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token refresh failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refresh failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "put": {
                "tags": ["Authentication"],
                "summary": "Update user profile",
                "description": "Update authenticated user's name and email",
                "operationId": "updateProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["name", "email"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.updated@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.updated@example.com"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": ["Authentication"],
                "summary": "Change user password",
                "description": "Change authenticated user's password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": ["Categories"],
                "summary": "Get all categories with active event count",
                "description": "Retrieve all categories sorted by name with count of active events (events with end_date > current date)",
                "operationId": "getCategoriesIndex",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Categories"],
                "summary": "Create a new category",
                "description": "Create a new category with name, description and color. Requires authentication.",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["name", "description", "color"],
                                "properties": {
                                    "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Music"
                                    },
                                    "description": {
                                        "description": "Category description",
                                        "type": "string",
                                        "example": "Concerts and musical events"
                                    },
                                    "color": {
                                        "description": "Hex color code",
                                        "type": "string",
                                        "maxLength": 7,
                                        "pattern": "^#[0-9A-Fa-f]{6}$",
                                        "example": "#FF5733"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "category": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "color": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": ["Categories"],
                "summary": "Get a specific category with its active events",
                "description": "Retrieve a specific category by ID with its active events (end_date > current date) ordered by start_date",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Categories"],
                "summary": "Update an existing category",
                "description": "Update category details. All fields are optional. Name must be unique. Requires authentication.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category update data (all fields optional)",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Category name (must be unique)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Category"
                                    },
                                    "description": {
                                        "description": "Category description",
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "color": {
                                        "description": "Hex color code",
                                        "type": "string",
                                        "maxLength": 7,
                                        "pattern": "^#[0-9A-Fa-f]{6}$",
                                        "example": "#123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "category": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "color": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Categories"],
                "summary": "Delete a category",
                "description": "Delete a category if it has no associated events. Requires authentication.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot delete category with associated events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete category with associated events"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}/events": {
            "get": {
                "tags": ["Categories"],
                "summary": "Get paginated list of active events for a specific category",
                "description": "Retrieve paginated active events (end_date > current date) for a specific category, ordered by start_date ascending. Returns 12 events per page.",
                "operationId": "getCategoryEvents",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category events retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/components/schemas/CategoryResource"
                                                },
                                                "events": {
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/EventResource"
                                                            }
                                                        },
                                                        "current_page": {
                                                            "description": "Current page number",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "description": "Last page number",
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "per_page": {
                                                            "description": "Items per page",
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "total": {
                                                            "description": "Total number of events",
                                                            "type": "integer",
                                                            "example": 30
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}/statistics": {
            "get": {
                "tags": ["Categories"],
                "summary": "Get comprehensive statistics for a specific category",
                "description": "Retrieve detailed statistics for a category including total events, active events, ticket sales, upcoming events, and average price",
                "operationId": "getCategoryStatistics",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "$ref": "#/components/schemas/CategoryResource"
                                                },
                                                "statistics": {
                                                    "properties": {
                                                        "total_events": {
                                                            "description": "Total number of events in this category",
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "active_events": {
                                                            "description": "Number of active events (end_date > now)",
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total_tickets_sold": {
                                                            "description": "Total active tickets sold for this category",
                                                            "type": "integer",
                                                            "example": 1200
                                                        },
                                                        "upcoming_events": {
                                                            "description": "Number of upcoming events (start_date > now)",
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "average_price": {
                                                            "description": "Average price of active events in this category",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 25.5,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": ["Events"],
                "summary": "Get a list of events with filtering, sorting, and pagination",
                "operationId": "e529c81e6aaec82f49950a87ed881f57",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for event name, location, description, or category name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter events by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Filter events by minimum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Filter events by maximum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter events by start date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter events by end date (format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter events by location (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "available_only",
                        "in": "query",
                        "description": "Filter to show only events with available tickets",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["true"]
                        }
                    },
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Filter to show only featured events",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["true"]
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Filter to show only events that have not yet ended",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["true"]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "start_date",
                                "price",
                                "name",
                                "created_at",
                                "available_tickets"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of events per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "example": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Events retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/EventResource"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving events"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Events"],
                "summary": "Create a new event",
                "description": "Creates a new event with the provided data. Available tickets will be automatically set to total tickets.",
                "operationId": "e958e1c6c275d5f9b7ebcd837903d0ef",
                "requestBody": {
                    "description": "Event data for creation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "start_date",
                                    "end_date",
                                    "location",
                                    "price",
                                    "total_tickets",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jazz Night"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Live jazz event with renowned artists"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/image.jpg",
                                        "nullable": true
                                    },
                                    "thumbnail_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/thumb.jpg",
                                        "nullable": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-25 19:00:00"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-25 23:00:00"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Belgrade Arena"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 50
                                    },
                                    "total_tickets": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 500
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "featured": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/suggestions": {
            "get": {
                "tags": ["Events"],
                "summary": "Get search suggestions based on a search term",
                "description": "Returns autocomplete suggestions for events, locations, and categories based on the provided search term",
                "operationId": "a2e580d1c565d0352ec79d0b7fa0d87f",
                "parameters": [
                    {
                        "name": "term",
                        "in": "query",
                        "description": "The search term to get suggestions for (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suggestions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "event",
                                                            "location",
                                                            "category"
                                                        ],
                                                        "example": "event"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "Concert in the Park"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "example": "Concert in the Park"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid search term",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Search term must be at least 2 characters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": ["Events"],
                "summary": "Get a single event by ID",
                "description": "Retrieves a specific event with its category and active tickets information",
                "operationId": "c0f602d773798994c228d99dbd63b842",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving event"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Events"],
                "summary": "Update an existing event",
                "description": "Updates an event with the provided ID. All fields are optional. When updating total_tickets, the system ensures it doesn't go below sold tickets count.",
                "operationId": "updateEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event data for update (all fields optional)",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Tech Conference 2025"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "An updated description of the biggest tech conference in the region."
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "maxLength": 500,
                                        "example": "https://example.com/images/event_new.jpg"
                                    },
                                    "thumbnail_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "maxLength": 500,
                                        "example": "https://example.com/images/event_thumb_new.jpg"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-21 09:00:00"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-22 17:00:00"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Belgrade, Serbia"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 55
                                    },
                                    "total_tickets": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 600
                                    },
                                    "available_tickets": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 550
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "9cde5f4d-6a56-4b13-9cf6-95333f24f86d"
                                    },
                                    "featured": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or business logic constraint",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot reduce total tickets below sold tickets (50)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "total_tickets": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Total tickets cannot be less than sold tickets (50)"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating event"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Events"],
                "summary": "Delete an event",
                "description": "Deletes an event by ID. If the event has sold tickets (active or used), deletion will fail with a 422 response. If the event is currently active, a warning will be logged.",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot delete event with sold tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete event with sold tickets (5 tickets sold)"
                                        },
                                        "data": {
                                            "properties": {
                                                "sold_tickets_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "can_force_delete": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting event"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{categoryId}/events": {
            "get": {
                "tags": ["Events"],
                "summary": "Get events by category",
                "description": "Retrieves all events belonging to a specific category, ordered by start date",
                "operationId": "6d4a42baf16dce723db8039d2c288654",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the category to get events for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events for the category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Music"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Music events and concerts"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "events": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events/{id}/tickets": {
            "get": {
                "tags": ["Events"],
                "summary": "Get tickets information for an event",
                "description": "Retrieves detailed ticket information for a specific event including sold, available, and total tickets with user details",
                "operationId": "767f4a4958dda9be63d42c7750e732e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to get ticket information for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "event": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jazz Night"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "total_tickets": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "sold_tickets": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "available_tickets": {
                                            "type": "integer",
                                            "example": 350
                                        },
                                        "tickets": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "active",
                                                            "used",
                                                            "cancelled"
                                                        ]
                                                    },
                                                    "purchase_date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Event]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/upload-image": {
            "post": {
                "tags": ["Events"],
                "summary": "Upload an image for an event",
                "description": "Uploads an image file for an event (main image or thumbnail) and returns the URL",
                "operationId": "ad073b3b6f9a14b1a614b9478d3fd107",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file (jpeg, png, jpg, gif - max 5MB)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "type": {
                                        "description": "Type of image being uploaded",
                                        "type": "string",
                                        "enum": ["main", "thumbnail"],
                                        "example": "main"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Image uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com/storage/events/1234567890_main_abcdef1234.jpg"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "events/1234567890_main_abcdef1234.jpg"
                                                },
                                                "filename": {
                                                    "type": "string",
                                                    "example": "1234567890_main_abcdef1234.jpg"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "main"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image must be a file of type: jpeg, png, jpg, gif."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error uploading image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error uploading image"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/export": {
            "get": {
                "tags": ["Events"],
                "summary": "Export events to CSV or HTML format",
                "description": "Exports all events data to CSV or HTML format. Requires admin privileges. CSV includes UTF-8 BOM for Excel compatibility.",
                "operationId": "5bdccc18ec12fd7d2cc5a9c8706c73b3",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (csv or html)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "csv",
                            "enum": ["csv", "html"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download initiated",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Admin access required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unsupported format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unsupported format. Use csv or html."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/export/events": {
            "get": {
                "tags": ["Export"],
                "summary": "Export events data",
                "description": "Export all events data in CSV or PDF format with their categories and details",
                "operationId": "exportEvents",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (csv or pdf)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "csv",
                            "enum": ["csv", "pdf"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events data exported successfully",
                        "headers": {
                            "Content-Disposition": {
                                "description": "File attachment header",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "description": "CSV file containing events data",
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "description": "HTML file containing events data (PDF format)",
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Export failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/export/tickets": {
            "get": {
                "tags": ["Export"],
                "summary": "Export tickets data",
                "description": "Export tickets data in CSV or PDF format, optionally filtered by event ID",
                "operationId": "exportTickets",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (csv or pdf)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "csv",
                            "enum": ["csv", "pdf"]
                        }
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Filter tickets by specific event ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tickets data exported successfully",
                        "headers": {
                            "Content-Disposition": {
                                "description": "File attachment header",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "description": "CSV file containing tickets data",
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "description": "HTML file containing tickets data (PDF format)",
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid event ID provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid event ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Export failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/queue/join": {
            "post": {
                "tags": ["Queue Management"],
                "summary": "Join the queue system",
                "description": "Allows a user to join the queue system. If queue is disabled or there's available capacity, grants direct access. Otherwise, adds user to waiting queue.",
                "operationId": "joinQueue",
                "responses": {
                    "200": {
                        "description": "Successfully joined queue or granted access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Direct access granted"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "active",
                                                        "waiting"
                                                    ],
                                                    "example": "active"
                                                },
                                                "can_access": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "position": {
                                                    "description": "Position in queue (0 for active users)",
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "estimated_wait_time": {
                                                    "description": "Estimated wait time in minutes",
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T15:30:00Z"
                                                },
                                                "session_duration": {
                                                    "description": "Session duration in minutes",
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "queue_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Database transaction failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/queue/status": {
            "get": {
                "tags": ["Queue Management"],
                "summary": "Check current queue status",
                "description": "Retrieves the current status of the user in the queue system, including position, wait time, and access permissions.",
                "operationId": "checkQueueStatus",
                "responses": {
                    "200": {
                        "description": "Queue status response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "True if user is in queue, false otherwise",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Queue status retrieved"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "description": "Current queue status",
                                                    "type": "string",
                                                    "enum": [
                                                        "active",
                                                        "waiting",
                                                        "not_in_queue"
                                                    ],
                                                    "example": "waiting"
                                                },
                                                "can_access": {
                                                    "description": "Whether the user can access the resource now",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "position": {
                                                    "description": "User's position in the queue, if applicable",
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "estimated_wait_time": {
                                                    "description": "Estimated wait time in minutes",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "expires_at": {
                                                    "description": "Time when access expires",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T15:30:00Z"
                                                },
                                                "total_waiting": {
                                                    "description": "Total number of users waiting",
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "total_active": {
                                                    "description": "Total number of active users",
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/queue/leave": {
            "delete": {
                "tags": ["Queue Management"],
                "summary": "Leave the queue",
                "description": "Removes the user from the queue system and reorders remaining users in the waiting queue.",
                "operationId": "leaveQueue",
                "responses": {
                    "200": {
                        "description": "Successfully left the queue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Left queue successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/enable": {
            "post": {
                "tags": ["Queue Administration"],
                "summary": "Enable the queue system",
                "description": "Activates the queue system for managing user access. Admin only endpoint.",
                "operationId": "enableQueue",
                "responses": {
                    "200": {
                        "description": "Queue system enabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Queue je uspešno aktiviran"
                                        },
                                        "data": {
                                            "properties": {
                                                "queue_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error enabling queue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri aktiviranju queue-a: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/disable": {
            "post": {
                "tags": ["Queue Administration"],
                "summary": "Disable the queue system",
                "description": "Deactivates the queue system and grants access to all waiting users. Admin only endpoint.",
                "operationId": "disableQueue",
                "responses": {
                    "200": {
                        "description": "Queue system disabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Queue je uspešno deaktiviran. Svi korisnici u redu su aktivirani."
                                        },
                                        "data": {
                                            "properties": {
                                                "queue_enabled": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "activated_users": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error disabling queue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri deaktiviranju queue-a: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/max-users": {
            "put": {
                "tags": ["Queue Administration"],
                "summary": "Set maximum active users limit",
                "description": "Updates the maximum number of users that can be active simultaneously. Admin only endpoint.",
                "operationId": "setMaxUsers",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "max_users": {
                                        "description": "Maximum number of active users",
                                        "type": "integer",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "example": 150
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Maximum users limit updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maksimalni broj korisnika je postavljen na 150"
                                        },
                                        "data": {
                                            "properties": {
                                                "max_users": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "current_active": {
                                                    "type": "integer",
                                                    "example": 125
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "max_users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The max users field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error setting maximum users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri postavljanju maksimalnog broja korisnika: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/stats": {
            "get": {
                "tags": ["Queue Administration"],
                "summary": "Get comprehensive queue statistics",
                "description": "Retrieves detailed statistics about the queue system including active users, waiting users, and performance metrics. Admin only endpoint.",
                "operationId": "getQueueStats",
                "responses": {
                    "200": {
                        "description": "Queue statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_waiting": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "total_active": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "total_expired": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "queue_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "max_active_users": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "average_wait_time": {
                                                    "description": "Average wait time in minutes",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 8.5
                                                },
                                                "longest_waiting": {
                                                    "description": "Longest waiting time in minutes",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15.2
                                                },
                                                "recent_activity": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 123
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "joined_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-01-01T12:00:00Z"
                                                            },
                                                            "expires_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-01-01T12:15:00Z"
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 456
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-01-01T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri dobijanju statistika: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/clear-waiting": {
            "delete": {
                "tags": ["Queue Administration"],
                "summary": "Clear all waiting users from queue",
                "description": "Removes all users from the waiting queue. Admin only endpoint.",
                "operationId": "clearWaitingQueue",
                "responses": {
                    "200": {
                        "description": "Waiting queue cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Obrisano je 25 korisnika iz reda čekanja"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error clearing waiting queue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri brisanju reda čekanja: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/clear-expired": {
            "delete": {
                "tags": ["Queue Administration"],
                "summary": "Clear all expired sessions",
                "description": "Removes all expired user sessions from the queue system. Admin only endpoint.",
                "operationId": "clearExpiredSessions",
                "responses": {
                    "200": {
                        "description": "Expired sessions cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Obrisano je 50 isteklih sesija"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error clearing expired sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri brisanju isteklih sesija: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/queue/activate-next": {
            "post": {
                "tags": ["Queue Administration"],
                "summary": "Manually activate next users in queue",
                "description": "Processes the queue and activates the next available users up to the maximum limit. Admin only endpoint.",
                "operationId": "activateNextInQueue",
                "responses": {
                    "200": {
                        "description": "Users activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Aktivirano je 5 korisnika iz reda"
                                        },
                                        "data": {
                                            "properties": {
                                                "activated_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "current_stats": {
                                                    "properties": {
                                                        "active": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "waiting": {
                                                            "type": "integer",
                                                            "example": 20
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error activating users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Greška pri aktiviranju korisnika: Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/purchase": {
            "post": {
                "tags": ["Tickets"],
                "summary": "Purchase a ticket for an event",
                "description": "Purchase a ticket for a specific event with optional discount",
                "operationId": "purchaseTicket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["event_id"],
                                "properties": {
                                    "event_id": {
                                        "description": "ID of the event",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "discount_percentage": {
                                        "description": "Discount percentage to apply",
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "example": 10.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ticket purchased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket purchased successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot purchase tickets for this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot purchase tickets for this event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error purchasing ticket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error purchasing ticket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{id}/qr-code": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get QR code for a ticket",
                "description": "Retrieve the QR code SVG and data for a specific ticket",
                "operationId": "getQRCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QR code retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "qr_code_svg": {
                                                    "description": "SVG format of QR code",
                                                    "type": "string"
                                                },
                                                "qr_code_data": {
                                                    "description": "Decoded QR code data",
                                                    "type": "object"
                                                },
                                                "ticket_number": {
                                                    "type": "string",
                                                    "example": "TKT-ABC12345"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/validate-qr": {
            "post": {
                "tags": ["Tickets"],
                "summary": "Validate QR code data",
                "description": "Validate a ticket using QR code data",
                "operationId": "validateQRCode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["qr_data"],
                                "properties": {
                                    "qr_data": {
                                        "description": "JSON data extracted from QR code",
                                        "properties": {
                                            "ticket_number": {
                                                "type": "string",
                                                "example": "TKT-ABC12345"
                                            },
                                            "event_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "QR code validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Valid ticket"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        },
                                        "qr_data": {
                                            "description": "Decoded QR data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid QR code format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid QR code format"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tickets/{id}/pdf": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Generate ticket PDF data",
                "description": "Get ticket data formatted for PDF generation",
                "operationId": "generateTicketPDF",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket data for PDF generation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket data for PDF generation"
                                        },
                                        "data": {
                                            "properties": {
                                                "ticket_number": {
                                                    "type": "string",
                                                    "example": "TKT-ABC12345"
                                                },
                                                "qr_code_svg": {
                                                    "description": "SVG QR code",
                                                    "type": "string"
                                                },
                                                "qr_code_base64": {
                                                    "description": "Base64 encoded QR code",
                                                    "type": "string"
                                                },
                                                "event": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "purchase_date": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/my-tickets": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get user's tickets with filtering and pagination",
                "description": "Retrieve paginated list of user's tickets with various filtering options",
                "operationId": "myTickets",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by ticket status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["all", "active", "used", "cancelled"],
                            "example": "active"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in event name or location",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "concert"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter tickets purchased from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter tickets purchased until this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by event category",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "purchase_date",
                                "event_date",
                                "price",
                                "status"
                            ],
                            "example": "purchase_date"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User tickets retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User tickets retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "tickets": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TicketResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "from": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "to": {
                                                            "type": "integer",
                                                            "example": 10
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "stats": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "active": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "used": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "cancelled": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "total_spent": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1250.5
                                                        },
                                                        "upcoming_events": {
                                                            "type": "integer",
                                                            "example": 8
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "filters": {
                                                    "properties": {
                                                        "applied": {
                                                            "type": "object"
                                                        },
                                                        "available_categories": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{id}/receipt": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Generate receipt for a ticket",
                "description": "Generate detailed receipt data for a purchased ticket",
                "operationId": "generateReceipt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Receipt generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "receipt_number": {
                                                    "type": "string",
                                                    "example": "RCP-ABC12345"
                                                },
                                                "issue_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "ticket": {
                                                    "type": "object"
                                                },
                                                "event": {
                                                    "type": "object"
                                                },
                                                "customer": {
                                                    "type": "object"
                                                },
                                                "company": {
                                                    "type": "object"
                                                },
                                                "payment_details": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/export-history": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Export purchase history",
                "description": "Export user's ticket purchase history in specified format",
                "operationId": "exportPurchaseHistory",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["csv", "excel", "pdf"],
                            "example": "csv"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Export tickets from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Export tickets until this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export data prepared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Export data prepared successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "export_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "filename": {
                                                    "type": "string",
                                                    "example": "purchase-history-2024-01-15.csv"
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "example": "csv"
                                                },
                                                "total_records": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "date_range": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/purchase-summary": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get purchase summary and analytics",
                "description": "Get detailed purchase summary with analytics for specified period",
                "operationId": "getPurchaseSummary",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for analysis",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "last_month",
                                "last_3_months",
                                "last_6_months",
                                "last_year"
                            ],
                            "example": "last_year"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase summary retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "overview": {
                                                    "properties": {
                                                        "total_spent": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1250.5
                                                        },
                                                        "total_tickets": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "average_ticket_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 50.02
                                                        },
                                                        "total_savings": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 125
                                                        },
                                                        "favorite_category": {
                                                            "type": "string",
                                                            "example": "Concert"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "monthly_breakdown": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "category_breakdown": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "trends": {
                                                    "properties": {
                                                        "spending_trend": {
                                                            "type": "string",
                                                            "enum": [
                                                                "increasing",
                                                                "decreasing",
                                                                "stable",
                                                                "insufficient_data"
                                                            ]
                                                        },
                                                        "most_active_month": {
                                                            "type": "string",
                                                            "example": "2024-03"
                                                        },
                                                        "preferred_price_range": {
                                                            "type": "string",
                                                            "example": "20-50 EUR"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/stats": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get ticket statistics",
                "description": "Get comprehensive ticket statistics for the authenticated user",
                "operationId": "getTicketStats",
                "responses": {
                    "200": {
                        "description": "Ticket statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "stats": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "active": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "used": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "cancelled": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "total_spent": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1250.5
                                                        },
                                                        "upcoming_events": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "monthly_spending": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_tickets": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TicketResource"
                                                    }
                                                },
                                                "upcoming_events": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TicketResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{id}": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get ticket details",
                "description": "Get detailed information about a specific ticket",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to ticket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access to ticket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{id}/download": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Download ticket data",
                "description": "Get ticket data formatted for download",
                "operationId": "downloadTicket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket data retrieved for download",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket data retrieved for download"
                                        },
                                        "data": {
                                            "properties": {
                                                "ticket_number": {
                                                    "type": "string",
                                                    "example": "TKT-ABC12345"
                                                },
                                                "qr_code": {
                                                    "description": "QR code JSON data",
                                                    "type": "string"
                                                },
                                                "event": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "purchase_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tickets/{id}/cancel": {
            "put": {
                "tags": ["Tickets"],
                "summary": "Cancel a ticket",
                "description": "Cancel a ticket and calculate refund based on cancellation policy",
                "operationId": "cancel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket cancelled successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "ticket": {
                                                    "$ref": "#/components/schemas/TicketResource"
                                                },
                                                "refund_info": {
                                                    "properties": {
                                                        "original_price": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "cancellation_fee_percentage": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "cancellation_fee": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "refund_percentage": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "refund_amount": {
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "hours_until_event": {
                                                            "type": "integer"
                                                        },
                                                        "policy_applied": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot cancel ticket",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot cancel ticket for events that have already started"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{eventId}/cancellation-policy": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get cancellation policy for an event",
                "description": "Get detailed cancellation policy information for a specific event",
                "operationId": "getCancellationPolicy",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cancellation policy retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cancellation policy retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "general_rules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "fee_structure": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "period": {
                                                                "type": "string"
                                                            },
                                                            "fee_percentage": {
                                                                "type": "integer"
                                                            },
                                                            "refund_percentage": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "exceptions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tickets/validate/{ticketNumber}": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Validate ticket by ticket number",
                "description": "Validate a ticket using its ticket number",
                "operationId": "validateTicket",
                "parameters": [
                    {
                        "name": "ticketNumber",
                        "in": "path",
                        "description": "Ticket number to validate",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "TKT-ABC12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Valid ticket"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        },
                                        "validation_details": {
                                            "properties": {
                                                "ticket_status": {
                                                    "type": "string"
                                                },
                                                "event_status": {
                                                    "type": "string"
                                                },
                                                "validation_time": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "event_start": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "event_end": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid ticket number",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ticket number"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tickets/validate-bulk": {
            "post": {
                "tags": ["Tickets"],
                "summary": "Validate multiple tickets at once",
                "description": "Validate multiple tickets using their ticket numbers",
                "operationId": "validateBulk",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["ticket_numbers"],
                                "properties": {
                                    "ticket_numbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "example": [
                                            "TKT-ABC12345",
                                            "TKT-DEF67890",
                                            "TKT-GHI11111"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk validation completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk validation completed"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "ticket_number": {
                                                        "type": "string"
                                                    },
                                                    "valid": {
                                                        "type": "boolean"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "ticket": {
                                                        "$ref": "#/components/schemas/TicketResource"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "summary": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "valid": {
                                                    "type": "integer"
                                                },
                                                "invalid": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tickets/{id}/mark-used": {
            "put": {
                "tags": ["Tickets"],
                "summary": "Mark ticket as used",
                "description": "Mark a ticket as used after validation",
                "operationId": "markAsUsed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket marked as used successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket marked as used successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ticket cannot be marked as used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket has already been used"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{eventId}/validation-stats": {
            "get": {
                "tags": ["Tickets"],
                "summary": "Get validation statistics for an event",
                "description": "Get comprehensive validation statistics for a specific event",
                "operationId": "getValidationStats",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_tickets": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "active_tickets": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "used_tickets": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "cancelled_tickets": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "validation_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 20
                                                },
                                                "recent_validations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "ticket_number": {
                                                                "type": "string"
                                                            },
                                                            "user_name": {
                                                                "type": "string"
                                                            },
                                                            "used_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "time_ago": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryResource": {
                "title": "Category Resource",
                "description": "Category resource returned by API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Music"
                    },
                    "description": {
                        "type": "string",
                        "example": "All music events"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF0000"
                    },
                    "events_count": {
                        "type": "integer",
                        "example": 5
                    },
                    "active_events_count": {
                        "type": "integer",
                        "example": 3
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventResource"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "title": "Event Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Concert"
                    },
                    "description": {
                        "type": "string",
                        "example": "Rock concert"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "example": "https://example.com/thumb.jpg"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "example": "Belgrade Arena"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    }
                },
                "type": "object"
            },
            "TicketResource": {
                "title": "Ticket Resource",
                "description": "Represents a ticket returned by the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_number": {
                        "type": "string",
                        "example": "TKT-ABC12345"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 50
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "purchase_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "used_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "cancelled_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "discount_percentage": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "qr_code": {
                        "type": "string",
                        "example": "base64-encoded-qr"
                    },
                    "event": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Rock Concert"
                            },
                            "location": {
                                "type": "string",
                                "example": "Belgrade Arena"
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "category": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Music"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Export",
            "description": "API endpoints for exporting data in various formats"
        },
        {
            "name": "Admin Dashboard",
            "description": "Admin Dashboard"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Queue Management",
            "description": "Queue Management"
        },
        {
            "name": "Queue Administration",
            "description": "Queue Administration"
        },
        {
            "name": "Tickets",
            "description": "Tickets"
        }
    ]
}
